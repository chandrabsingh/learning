Traceback (most recent call last):
  File "/Users/chandrasingh/opt/anaconda3/envs/fast/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/chandrasingh/opt/anaconda3/envs/fast/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/chandrasingh/opt/anaconda3/envs/fast/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/chandrasingh/opt/anaconda3/envs/fast/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/chandrasingh/opt/anaconda3/envs/fast/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/chandrasingh/opt/anaconda3/envs/fast/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/chandrasingh/opt/anaconda3/envs/fast/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/chandrasingh/opt/anaconda3/envs/fast/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# To compare the results use ArviZ's plot_forest function. 
# - We can pass more than one model to this function. 
# - This is useful when we want to compare the values of parameters from different models 
  # such as with the present example. 
  # Notice that we are passing several arguments to plot_forest to get the plot that we want, 
  # like combined=True to merge results from all the chains. 
  # I invite you to explore the rest of the arguments:

with cs_h, cs_nh:
    _, axes = az.plot_forest([trace_cs_nh, trace_cs_h],
                         model_names=['n_h', 'h'],
                         var_names='Î¼', combined=False, colors='cycle')
    y_lims = axes[0].get_ylim()
    axes[0].vlines(trace_cs_h['Î¼_Î¼'].mean(), *y_lims)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Input [0;32mIn [48][0m, in [0;36m<cell line: 9>[0;34m()[0m
[1;32m      1[0m [38;5;66;03m# To compare the results use ArviZ's plot_forest function. [39;00m
[1;32m      2[0m [38;5;66;03m# - We can pass more than one model to this function. [39;00m
[1;32m      3[0m [38;5;66;03m# - This is useful when we want to compare the values of parameters from different models [39;00m
[0;32m   (...)[0m
[1;32m      6[0m   [38;5;66;03m# like combined=True to merge results from all the chains. [39;00m
[1;32m      7[0m   [38;5;66;03m# I invite you to explore the rest of the arguments:[39;00m
[1;32m      9[0m [38;5;28;01mwith[39;00m cs_h, cs_nh:
[0;32m---> 10[0m     _, axes [38;5;241m=[39m az[38;5;241m.[39mplot_forest([trace_cs_nh, trace_cs_h],
[1;32m     11[0m                          model_names[38;5;241m=[39m[[38;5;124m'[39m[38;5;124mn_h[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mh[39m[38;5;124m'[39m],
[1;32m     12[0m                          var_names[38;5;241m=[39m[38;5;124m'[39m[38;5;124mÎ¼[39m[38;5;124m'[39m, combined[38;5;241m=[39m[38;5;28;01mFalse[39;00m, colors[38;5;241m=[39m[38;5;124m'[39m[38;5;124mcycle[39m[38;5;124m'[39m)
[1;32m     13[0m     y_lims [38;5;241m=[39m axes[[38;5;241m0[39m][38;5;241m.[39mget_ylim()
[1;32m     14[0m     axes[[38;5;241m0[39m][38;5;241m.[39mvlines(trace_cs_h[[38;5;124m'[39m[38;5;124mÎ¼_Î¼[39m[38;5;124m'[39m][38;5;241m.[39mmean(), [38;5;241m*[39my_lims)

[0;31mValueError[0m: not enough values to unpack (expected 2, got 1)
ValueError: not enough values to unpack (expected 2, got 1)

